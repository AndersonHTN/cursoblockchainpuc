&& = AND = E
// = OR = ou

time stamp = procurar no google, calcula segundos

address(this).balance = saldo
end/conta do SC 

.transfer = transfere para conta valor em wei


modifier = faz referência a várias clausulas, algo que se aplicará a várias clausulas posteriores

bool = função para verdadeiro ou falso

msg.sender = endereço de quem envia a trx
msg.value = valor que envio na trx

CHAMANDO FUNÇÕES:

nomeDaFunção ()
escreva o nome da função e logo após abra ( e, se houver parametro informe, depois)

ver moeda ethereum dai = paridade com dollar

palvras chaves sempre começam com letra minúscula:
contract if else for function bool true false require modifier 

para chamar uma função, escreve-se o nome dela, abre parênteses e fecha parênteses. Se tiver algo, coloca os parâmetros dentro da função, se não houver, deixa em branco. 
Ex: função ()

struct : usa-se para criar dado persolnalizado. Existem dados como string (texto), uint (número) e address (carteira)
o struct pertite criar um novo tipo de variável, um novo tipo de dado. trata-se de um bloco que se abre e fecha e nelo coloca-se os campos, pode ser utilizado para qualificação de parte, por exemplo. 
pode=se utilizar para qualificar partes, bens, a exemplo do imóvel. o tipo de estrutura mais comum é para qualificar. 
struct permite criar tipo de dado
[] isto é um args array (por padrão há é uint)

mapping => string (alfa-numérico)  é um tipo de dado que é o id do elemento na coleção 

mapping (address => Ofertante) public listaOfertantes

para dados de coleção usa-se o [] para dados numericos ou o mapping para criar o que se quiser

o ponto de exclamação quer dizer que é falso, poderia ser ==false
colocar só a condição quer dizer que ela é verdadeira, poderia ser ==true
assim:
(condição) ==true
(!) ==false

scroll (a pessoal que recebe o dinheiro, pode ser o contrato) o Geiger queria que fosse o tabelião, mas não somos instituição financeira

adicionar um item no mapping:
listaOfertantes [endereço]=ofertanteX;
nome da variável    Dado que      valor que
do tipo mapping     quer será     será armazenado
                    índice         no mapping
                    

contaQueVaiReceber.trasnfer (1000);   a conta de quem está antes do "trasnfer" é a que recebe
destinatário
ou beneficiário

memory - grava temporário
storage - grava para sempre







 
